{"meta":{"title":"RW","subtitle":"","description":"","author":"R","url":"https://csklzj.github,io","root":"/"},"pages":[{"title":"关于","date":"2021-05-20T06:41:05.000Z","updated":"2021-05-20T06:54:03.677Z","comments":true,"path":"about/index.html","permalink":"https://csklzj.github,io/about/index.html","excerpt":"","text":""},{"title":"标签","date":"2021-05-20T06:40:58.000Z","updated":"2021-05-20T07:59:16.397Z","comments":true,"path":"tags/index.html","permalink":"https://csklzj.github,io/tags/index.html","excerpt":"","text":""},{"title":"分类","date":"2021-05-20T06:39:49.000Z","updated":"2021-05-20T07:58:33.180Z","comments":true,"path":"categories/index.html","permalink":"https://csklzj.github,io/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"意图和广播","slug":"意图和广播","date":"2021-05-20T04:18:21.853Z","updated":"2021-05-20T08:15:30.348Z","comments":true,"path":"2021/05/20/意图和广播/","link":"","permalink":"https://csklzj.github,io/2021/05/20/%E6%84%8F%E5%9B%BE%E5%92%8C%E5%B9%BF%E6%92%AD/","excerpt":"前言Intent(意图) 是一个消息传递对象，您可以使用它从其他应用组件请求操作。尽管 Intent 可以通过多种方式促进组件之间的通信，但其基本用例主要包括以下三个：","text":"前言Intent(意图) 是一个消息传递对象，您可以使用它从其他应用组件请求操作。尽管 Intent 可以通过多种方式促进组件之间的通信，但其基本用例主要包括以下三个： 启动活动(Activity)： Activity 表示应用中的一个”屏幕”。例如应用主入口都是一个Activity，应用的功能通常也以Activity的形式独立，例如微信的主界面、朋友圈、聊天窗口都是不同的Activity。通过将 Intent 传递给 startActivity()，您可以启动新的 Activity 实例。Intent 描述了要启动的 Activity，并携带了任何必要的数据。 启动服务(Service)： Service 是一个不使用用户界面而在后台执行操作的组件。通过将 Intent 传递给 startService()，您可以启动服务执行一次性操作（例如，下载文件）。Intent 描述了要启动的服务，并携带了任何必要的数据。 传递广播： 广播是任何应用均可接收的消息。系统将针对系统事件（例如：系统启动或设备开始充电时）传递各种广播。通过将 Intent 传递给 sendBroadcast()、sendOrderedBroadcast() 或 sendStickyBroadcast()，您可以将广播传递给其他应用。 app.intent(options) options {Object} 选项，包括： action {string} 意图的Action，指意图要完成的动作，是一个字符串常量，比如”android.intent.action.SEND”。当action以”android.intent.action”开头时，可以省略前缀，直接用”SEND”代替。参见Actions。 type {string} 意图的MimeType，表示和该意图直接相关的数据的类型，表示比如”text/plain”为纯文本类型。 data {string} 意图的Data，表示和该意图直接相关的数据，是一个Uri, 可以是文件路径或者Url等。例如要打开一个文件, action为”android.intent.action.VIEW”, data为”file:///sdcard/1.txt”。 category {Array} 意图的类别。比较少用。参见Categories。 packageName {string} 目标包名 className {string} 目标Activity或Service等组件的名称 extras {Object} 以键值对构成的这个Intent的Extras(额外信息)。提供该意图的其他信息，例如发送邮件时的邮件标题、邮件正文。参见Extras。 flags {Array} intent的标识，字符串数组，例如[“activity_new_task”, “grant_read_uri_permission”]。参见Flags。[v4.1.0新增] root {Boolea} 是否以root权限启动、发送该intent。使用该参数后，不能使用context.startActivity()等方法，而应该直接使用诸如app.startActivity({…})的方法。[v4.1.0新增] Acitivity(活动)Activity软件抓此方法比较简单，安装 Activity 软件，授予剪贴板权限、无障碍权限（如有root，直接一键激活）等权限，然后正常运行到要提取的界面，观察活动名，正确的话点一下悬浮窗提取所需要的的包名/活动名 到剪贴板。然后用以下命令拼接可得到所需命令 1am start -n 包名/活动名 注意： 如果提取到的含有特殊符号（比如$）,把包名/活动名用英文的引号引起来，单、双引号都可，我称之为引号原则。 如果活动名中含有包名，可删去活动名中的包名（强迫症福音）。 12am start -n &#x27;包名/活动名&#x27;am start -n &quot;包名/活动名&quot; xposed edge pro抓这个比较简单，思路就是利用xposed edge pro的应用菜单抓取，再处理其数据就得到命令 设置好edge手势（别的也可）触发应用菜单 到要抓的界面调出应用菜单-活动-提取活动 以文本方式打开/data/user_de/0/com.jozein.xedgepro/prefs/collection找到最后一行 以空格为界，最后一项为操作的值 如果该值符合包名/活动名的特点，就按 am start -n 包名/活动名处理即可， Intent(意图)以 #intent 开头, 以 ;end 结尾, xposed edge pro抓这个比较简单，思路就是利用xposed edge pro的应用菜单抓取，再处理其数据就得到命令 设置好edge手势（别的也可）触发应用菜单 到要抓的界面调出应用菜单-活动-带参数提取活动 以文本方式打开/data/user_de/0/com.jozein.xedgepro/prefs/collection找到最后一行 以空格为界，最后一项为操作的值 12am start &#x27;intent:值&#x27;am start &quot;intent:值&quot; 桌面图标抓取对于这种方法，要想尽办法把软件的某个功能发送到桌面，如果能发送到桌面就可以试试这种方法。 手动改安卓7以上，桌面的short会存放到文件里，通过里面的信息来做成intent值方法：准备软件：MT文件（其他也行）⑴ 将 微信小程序-最近文档随身 添加到桌面并返回桌面确定该小程序图标存在⑵ 用MT打开 /data/data/ch.deletescape.lawnchair.plah/databases/shortcuts.xml ，点右上角三个点搜索 最近文档随身 复制出如下红框内代码至空白文档⑶ 按照我下图的修改方法得到intent值 ⑷ 根据模板 am start “intent:intent值” 拼接命令 脚本执行 下载依心所言的脚本：提取Shortcut与桌面启动器(引号可选版)7.3.sh 点击编辑，第13行nn中0改999可以得到双开应用桌面的intent，第16行ee可以改变执行结果的位置 发送快捷方式到桌面 运行脚本（可使用MT管理器、FV悬浮球、常规脚本），勾选Root，点击执行 查找/storage/emulated/0/000/提取intent下shortcuts.sh文件，点编辑，点右上角三个点搜索 最近文档随身 xp模块抓取 安卓7以下intent记录模块 安卓7以上 intent拦截这模块 将Tasker的任务文件intent值转shell命令.tsk.xml导入到Tasker里， 然后将将第三方软件抓取到的一堆值替换到第一步里的 发往，再运行就好了。 URL scheme 如果满足以下任意要求能打开软件内某界面，它就有对应的URL Scheme⑴ 小程序跳转⑵ 通知栏跳转⑶ 网页跳转⑷ 识别剪贴板跳转 URL Schema协议格式：xl://goods:8888/goodsDetail?goodsId=10011002通过上面的路径 Schema、Host、port、path、query全部包含，基本上平时使用路径就是这样子的。?xl代表该Schema 协议名称?goods代表Schema作用于哪个地址域?goodsDetail代表Schema指定的页面?goodsId代表传递的参数?8888代表该路径的端口号 举例子：支付宝的扫一扫alipays://platformapi/startapp?appId=10000007酷安打开指定用户coolmarket://u/1057386酷安打开指定帖子coolmarket://feed/16306963 这个命令的模板有两个 123456# 打开 URL scheme 命令 短版am start -d &#x27;URL Scheme&#x27;am start -d &quot;URL Scheme&quot;# 打开 URL scheme 命令 长版am start -a android.intent.action.VIEW -d &#x27;URL Scheme&#x27;am start -a android.intent.action.VIEW -d &quot;URL Scheme&quot; 查-ios捷径社区或者百度ios捷径社区随便找 网页中找找可以打开软件的网址米侠浏览器 以qq音乐为例， 复制分享链接在米侠浏览器打开，能出现请求打开qq音乐弹窗后 点最上角三个点–》网络日志–》找不是以https或者http开头的链接 网址源码中查找当上一步抓到了链接，但是不支持是，需要在源码中查找 先反编译安装包，在xml里搜索schem, 一般是第一个即为协议头 在源码中搜索 协议头:// 比如酷安 coolmarket:\\\\ 如果源码中找不到就去 网页js中查找 利用 【Anywhere- 快捷方式】服务利用软件 My Android Tools 点击侧边栏应用程序，搜索应用，点击查看所有组件信息–》服务 等待服务启动，看哪个服务由黑变蓝 点击右上角三角放大，复制 am start-foreground-service 包名/服务名am stop-serviceam force-stop 包名 广播Auto.js发广播1234567891011121314151617// send-broadcast.jsapp.sendBroadcast(&#123; action: &#x27;autojs.intent.action.MAIN&#x27;, extras: &#123; from: &#x27;Autojs&#x27;, version: &#x27;3.1.0 Beta&#x27;, info: &#x27;You got me :)&#x27;, &#125;,&#125;);/*** 发广播：* 1. action 的内容可以自定义，只要与 Tasker 接收意图中所写的 action 一致，Tasker 便可接收到该意图* 2. extras 是以键值对构成的对象，键值对亦可自定义*/ 收广播js文件如下 12345678910111213141516171819202122232425262728293031323334353637383940414243444546/*** 假设接收到的广播 Intent 内容如下：** action: com.autojs.intent.INTENT_RECEIVED_DEMO* data: package:net.dinglisch.android.taskerm* package: org.autojs.autojs* extras:* from:Tasker* message:Hello Autojs** 说明：以上 intent 并非真实的格式，仅是为了令读者知道该 intent 有哪些值*//*** 由广播 Intent 触发的脚本都可通过以下方法获取到该广播的 Intent 对象* 需注意，该对象为 Android 的 Intent 对象，需调用 Android 的 Intent 方法*/const intent = engines.myEngine().execArgv.intent;const action = intent.action; // 读取 action；同 intent.getAction()const data = intent.data; // 读取 data，返回 Java Uri 对象；同 intent.getData()const package = intent.package; // 读取 package；同 intent.getPackage()const from = intent.getStringExtra(&#x27;from&#x27;); // 读取 extras 中的 from 值const message = intent.getStringExtra(&#x27;message&#x27;); // 读取 extras 中的 message 值console.log(action); // &quot;com.autojs.intent.USER_DEFINED&quot;console.log(data); // &quot;package:net.dinglisch.android.taskerm&quot;console.log(package); // &quot;org.autojs.autojs&quot;console.log(from); // &quot;Tasker&quot;console.log(message); // &quot;Hello Autojs&quot;// 遍历所有 extras 值（上面为单个 extra 的读取）let o = &#123;&#125;;const extras = intent.extras;if(extras) &#123; let iter = extras.keySet().iterator(); while(iter.hasNext()) &#123; let key = iter.next(); o[key] = extras.get(key); &#125;&#125;console.log(JSON.stringify(o)); // &#123;&quot;from&quot;:&quot;Tasker&quot;,&quot;message&quot;:&quot;Hello Autojs&quot;&#125;// 其他实现代码// ... 三个点–》更多–》定时执行–》广播触发 Tasker发广播收广播Fv悬浮球发广播收广播Xposed edge pro发广播 格式：am broadcast -n “包名/广播接收Receiver” -a 广播名 –ei 参数Key 参数Value –ei 参数Key 参数Value adb shell am broadcast -a com.android.test --es test_string &quot;this is test string&quot; --ei test_int 100 --ez test_boolean true 说明：–es 表示使用字符串类型参数 –ei 表示int类型参数 –ez 表示boolean类型参数 adb shell am broadcast -n &quot;com.autonavi.amapauto/com.autonavi.amapauto.adapter.internal.AmapAutoBroadcastReceiver&quot; -a AUTONAVI_STANDARD_BROADCAST_RECV --ei &quot;KEY_TYPE&quot; 10047 --ei &quot;EXTRA_CASUAL_MUTE&quot; 1 同源码的效果： 12345678private void setNaviCasualMute(int mute) &#123; Intent intent = new Intent(); intent.setClassName(&quot;com.autonavi.amapauto&quot;, &quot;com.autonavi.amapauto.adapter.internal.AmapAutoBroadcastReceiver&quot;); intent.setAction(&quot;AUTONAVI_STANDARD_BROADCAST_RECV&quot;); intent.putExtra(&quot;KEY_TYPE&quot;, 10047); intent.putExtra(&quot;EXTRA_CASUAL_MUTE&quot;, mute); mContext.sendBroadcastAsUser(intent, UserHandle.SYSTEM);&#125; URL Scheme 整理搜索类淘宝搜索指定物品 1tbopen://s.taobao.com?q=[prompt:商品名称] 使用天猫搜索 1tbopen://list.tmall.com/search_product.htm?q=[prompt:商品名称] 搜索指定店铺 1tbopen://shopsearch.taobao.com/search?app=shopsearch&amp;q=[prompt:店铺名称] 跳转指定淘宝店铺 1tbopen://shop.m.taobao.com/shop/shop_index.htm?shopId=[prompt:店铺 ID] 豆瓣搜索内容 1douban:///search?q=[prompt:搜索内容] 美团全局搜索 1imeituan://www.meituan.com/search?q=[prompt:商品名称] 酒店搜索 1imeituan://www.meituan.com/hotel/search?q=[prompt:酒店名称] 大众点评搜索商品 1dianping://searchshoplist?keyword=[prompt:商品名称] 什么值得买搜索商品 1smzdm://search?json=&#123;&#123;&#123;&quot;channelName&quot;:&quot;home&quot;,&quot;search_type&quot;:&quot;1&quot;,&quot;keyWord&quot;:&quot;[prompt:商品名称]&quot;&#125;&#125;&#125; 知乎搜索问题 1zhihu://search?q=[prompt] 哔哩哔哩搜索视频 1bilibili://search?keyword=[prompt] YouTube搜索视频，此处的 URL 在 Universal Link 的作用下会直接跳转 YouTube 客户端，如果没有安装客户端则直接打开网页搜索。 1https://m.youtube.com/results?q=[prompt] App Store搜索软件 1itms-apps://search.itunes.apple.com/WebObjects/MZSearch.woa/wa/search?media=software&amp;term=[prompt] 新浪微博微博搜索 1sinaweibo://searchall?q=[prompt] 京东搜索商品 1openapp.jdmobile://virtual?params=&#123;&#123;&#123;&quot;des&quot;:&quot;productList&quot;,&quot;keyWord&quot;:&quot;[prompt:商品名称]&quot;,&quot;from&quot;:&quot;search&quot;,&quot;category&quot;:&quot;jump&quot;&#125;&#125;&#125; 拼多多搜索商品 1pinduoduo://com.xunmeng.pinduoduo/search_result.html?search_key=[prompt:商品名称] 扫码类微信扫一扫 1weixin://scanqrcode 支付宝付款码 1alipayqr://platformapi/startapp?appId=20000056 扫一扫 1alipayqr://platformapi/startapp?appId=10000007 乘车码 1alipayqr://platformapi/startapp?appId=200011235 其他支付宝相关的小程序跳转的 URL Scheme 请参照《URL Scheme 查询指南》支付宝段落自行查询，此处不再一一列举。 美团普通扫码页面 1imeituan://www.meituan.com/scanQRCode 共享单车扫码 1imeituan://www.meituan.com/bike/scan?lc-callback=imeituan://www.meituan.com/bike/inscan 该 URL Scheme 有且仅有配合 Launch Center Pro 的 lc-callback 协议方能正常使用 菜鸟打开身份码 1cainiao://desktop/station_code 参数类设置捷径屏幕使用时间通知 123prefs:root=SCREEN_TIME&amp;path=SCREEN_TIME_SUMMARY#DAY/com.apple.shortcutsprefs:root=SCREEN_TIME&amp;path=SCREEN_TIME_SUMMARY#WEEK/com.apple.shortcuts 其他协议头微信 wechat:// QQ mqq:// 微博 weibo:// 墨客 com.moke.moke:// 今日头条 snssdk141:// 知乎 zhihu:// 淘宝 taobao:// 京东 openapp.jdmobile:// 米家 mihome:// WPS KingsoftOfficeApp:// 滴滴出行 diditaxi:// 58同城 wbmain:// 掌阅iReader iReader:// 格志 griddiary:// 搜狗输入法 com.sogou.sogouinput:// 1Password onepassword:// Price Tag 打开 pricetag:// 发现 pricetag://explore 收藏 pricetag://favorites 降价 pricetag://pricedrop 银行类 浦发银行 wx1cb534bb13ba3dbd:// 招商银行 cmbmobilebank:// 建设银行 wx2654d9155d70a468:// 工商银行 com.icbc.iphoneclient:// 百度应用 百度文库hd bdwenku:// 百度云盘 baiduyun:// 百度贴吧 com.baidu.tieba:// 百度音乐 baidumusic:// 百度视频 baiduvideoiphone:// 或 bdviphapp:// 百度糯米 bainuo:// 百度魔图 photowonder:// 百度魔拍 wondercamera:// 百度地图 baidumap:// 百度导航 bdNavi:// 视频类 B站 bilibili:// 优酷 youku:// PPTV pptv:// 爱奇艺视频 qiyi-iphone:// 暴风影音 com.baofeng.play:// 土豆视频 tudou:// 支付宝 打开应用 alipay:// 扫一扫 alipayqr://platformapi/startapp?saId=10000007 乘车码 alipayqr://platformapi/startapp?saId=200011235 付款码 alipayqr://platformapi/startapp?saId=20000056 收款码 alipayqr://platformapi/startapp?saId=20000123 转账 alipayqr://platformapi/startapp?saId=20000116 提现 alipayqr://platformapi/startapp?saId=20000033 花呗 alipays://platformapi/startapp?appId=20000199 借呗 alipays://platformapi/startapp?appId=20000180 还信用卡 alipays://platformapi/startapp?appId=09999999 蚂蚁森林 alipay://platformapi/startapp?appId=60000002 蚂蚁庄园 alipays://platformapi/startapp?appId=66666674 运动 alipayqr://platformapi/startapp?saId=20000869 卡劵 alipayqr://platformapi/startapp?saId=88888888 彩票 alipays://platformapi/startapp?appId=10000011 生活缴费 alipays://platformapi/startapp?appId=20000193 手机充值 alipayqr://platformapi/startapp?saId=10000003 生活圈 alipays://platformapi/startapp?appId=20000943 浏览器合集 Safari浏览器 x-web-search:// Alook浏览器 Alook:// 无相浏览器 wuxiang:// 夸克浏览器 quark:// UC浏览器 ucbrowser:// QQ浏览器 mttbrowser:// Chrome浏览器 googlechrome:// 音乐应用 酷我音乐 com.kuwo.kwmusic.kwmusicForKwsing:// 豆瓣 FM doubanradio:// 酷狗音乐 kugouURL:// 网易云音乐 打开应用 orpheuswidget:// 私人FM orpheuswidget://radio 本地音乐 orpheuswidget://download 听歌识曲 orpheuswidget://recognize 歌单 orpheuswidget://playlist/id 用户页orpheuswidget://user/userid 播放音乐 orpheuswidget://song/songid 热搜榜 orpheus://playlist/3778678 飙升榜 orpheus://playlist/19723756 新歌榜 orpheus://playlist/3779629 QQ音乐 123456喜欢 qqmusic://qq.com/ui/myTab?p=%7B%22tab%22%3A%22fav%22%7D本地音乐 qqmusic://today?mid=31&amp;k1=3&amp;k4=0最近播放 qqmusic://today?mid=31&amp;k1=2&amp;k4=0个性电台 qqmusic://qq.com/media/playRadio?p=%7B%22radioId%22%3A%2299%22%7D听歌识曲 qqmusic://qq.com/ui/recognize继续播放 qqmusic://qq.com/media/resumeSong?p=%7B%7D 虾米音乐 搜索 xiami://search 日推 xiami://dailysong?action=play 本地音乐 xiami://playLocalMusic 听歌识曲 xiami://musicRecognize Alook 启动App：Alook://搜索或者打开URL： Alook://后面接搜索的内容或要打开的链接新建下载:Alok://download/后面接下载的链接扫描二维码: Alook://QRCode开始搜索: Alook://Search打开图书馆: Alook://Books打开书签:Alok://Bookmarks扫描二维码：Alook://QRCode vvebo打开应用 vvebo转发 vvebo://reposts评论 vvebo://comments发微博 vvebo://post 天猫 tmall://彩云小译 mlink:// 后记关于双开软件没有介绍，只简单提一句am start --user 999，可以在终端输入am查看使用方法. 安卓 intent123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899// 安卓innetvar intent = new Intent();//辅助功能intent.setAction(&quot;android.settings.ACCESSIBILITY_SETTINGS&quot;);//intent.setAction(&quot;android.settings.ADD_ACCOUNT_SETTINGS&quot;);//添加账户//intent.setAction(&quot;android.settings.AIRPLANE_MODE_SETTINGS&quot;);//系统设置首页//intent.setAction(&quot;android.settings.APN_SETTINGS&quot;);//APN设置//intent.setAction(&quot;android.settings.APPLICATION_SETTINGS&quot;);//应用管理//intent.setAction(&quot;android.settings.BATTERY_SAVER_SETTINGS&quot;);//节电助手//intent.setAction(&quot;android.settings.BLUETOOTH_SETTINGS&quot;);//蓝牙//intent.setAction(&quot;android.settings.CAPTIONING_SETTINGS&quot;);//字幕//intent.setAction(&quot;android.settings.CAST_SETTINGS&quot;);//无线显示//intent.setAction(&quot;android.settings.DATA_ROAMING_SETTINGS&quot;);//移动网络//intent.setAction(&quot;android.settings.DATE_SETTINGS&quot;);//日期和时间设置//intent.setAction(&quot;android.settings.DEVICE_INFO_SETTINGS&quot;);//关于手机//intent.setAction(&quot;android.settings.DISPLAY_SETTINGS&quot;);//显示设置//intent.setAction(&quot;android.settings.DREAM_SETTINGS&quot;);//互动屏保设置//intent.setAction(&quot;android.settings.HARD_KEYBOARD_SETTINGS&quot;);//实体键盘//intent.setAction(&quot;android.settings.HOME_SETTINGS&quot;);//应用权限,默认应用设置,特殊权限//intent.setAction(&quot;android.settings.IGNORE_BATTERY_OPTIMIZATION_SETTINGS&quot;);//忽略电池优化设置//intent.setAction(&quot;android.settings.INPUT_METHOD_SETTINGS&quot;);//可用虚拟键盘设置//intent.setAction(&quot;android.settings.INPUT_METHOD_SUBTYPE_SETTINGS&quot;);//安卓键盘语言设置(AOSP)//intent.setAction(&quot;android.settings.INTERNAL_STORAGE_SETTINGS&quot;);//内存和存储//intent.setAction(&quot;android.settings.LOCALE_SETTINGS&quot;);//语言偏好设置//intent.setAction(&quot;android.settings.LOCATION_SOURCE_SETTINGS&quot;);//定位服务设置//intent.setAction(&quot;android.settings.MANAGE_ALL_APPLICATIONS_SETTINGS&quot;);//所有应用//intent.setAction(&quot;android.settings.MANAGE_APPLICATIONS_SETTINGS&quot;);//应用管理//intent.setAction(&quot;android.settings.MANAGE_DEFAULT_APPS_SETTINGS&quot;);//与ACTION_HOME_SETTINGS相同//intent.setAction(&quot;android.settings.action.MANAGE_OVERLAY_PERMISSION&quot;);//在其他应用上层显示,悬浮窗//intent.setAction(&quot;android.settings.MANAGE_UNKNOWN_APP_SOURCES&quot;);//安装未知应用 安卓8.0//intent.setAction(&quot;android.settings.action.MANAGE_WRITE_SETTINGS&quot;);//可修改系统设置 权限//intent.setAction(&quot;android.settings.MEMORY_CARD_SETTINGS&quot;);//内存与存储//intent.setAction(&quot;android.settings.NETWORK_OPERATOR_SETTINGS&quot;);//可用网络选择//intent.setAction(&quot;android.settings.NFCSHARING_SETTINGS&quot;);//NFC设置//intent.setAction(&quot;android.settings.NFC_SETTINGS&quot;);//网络中的 更多设置//intent.setAction(&quot;android.settings.ACTION_NOTIFICATION_LISTENER_SETTINGS&quot;);//通知权限设置//intent.setAction(&quot;android.settings.NOTIFICATION_POLICY_ACCESS_SETTINGS&quot;);//勿扰权限设置//intent.setAction(&quot;android.settings.ACTION_PRINT_SETTINGS&quot;);//打印服务设置//intent.setAction(&quot;android.settings.PRIVACY_SETTINGS&quot;);//备份和重置//intent.setAction(&quot;android.settings.SECURITY_SETTINGS&quot;);//安全设置//intent.setAction(&quot;android.settings.SHOW_REGULATORY_INFO&quot;);//监管信息//intent.setAction(&quot;android.settings.SOUND_SETTINGS&quot;);//声音设置//intent.setAction(&quot;android.settings.SYNC_SETTINGS&quot;);//添加账户设置//intent.setAction(&quot;android.settings.USAGE_ACCESS_SETTINGS&quot;);//有权查看使用情况的应用//intent.setAction(&quot;android.settings.USER_DICTIONARY_SETTINGS&quot;);//个人词典//intent.setAction(&quot;android.settings.VOICE_INPUT_SETTINGS&quot;);//辅助应用和语音输入//intent.setAction(&quot;android.settings.VPN_SETTINGS&quot;);//VPN设置//intent.setAction(&quot;android.settings.VR_LISTENER_SETTINGS&quot;);//VR助手//intent.setAction(&quot;android.settings.WEBVIEW_SETTINGS&quot;);//选择webview//intent.setAction(&quot;android.settings.WIFI_IP_SETTINGS&quot;);//高级WLAN设置//intent.setAction(&quot;android.settings.WIFI_SETTINGS&quot;);//选择WIFI,连接WIFIapp.startActivity(intent);","categories":[{"name":"AutoJs","slug":"AutoJs","permalink":"https://csklzj.github,io/categories/AutoJs/"},{"name":"intent","slug":"AutoJs/intent","permalink":"https://csklzj.github,io/categories/AutoJs/intent/"}],"tags":[{"name":"intent","slug":"intent","permalink":"https://csklzj.github,io/tags/intent/"},{"name":"broadcast","slug":"broadcast","permalink":"https://csklzj.github,io/tags/broadcast/"}]}],"categories":[{"name":"AutoJs","slug":"AutoJs","permalink":"https://csklzj.github,io/categories/AutoJs/"},{"name":"intent","slug":"AutoJs/intent","permalink":"https://csklzj.github,io/categories/AutoJs/intent/"}],"tags":[{"name":"intent","slug":"intent","permalink":"https://csklzj.github,io/tags/intent/"},{"name":"broadcast","slug":"broadcast","permalink":"https://csklzj.github,io/tags/broadcast/"}]}